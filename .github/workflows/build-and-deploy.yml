name: CI/CD Pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  pull_request_target:
    branches: [main]
  push:
    branches: [main]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: lts/*

      - name: Install and build
        run: |
          cd website
          npm ci --no-audit && npm run build

      - name: Archive production build
        uses: actions/upload-artifact@v4.6.2
        with:
          name: build-artifact
          path: website/build

      - name: Prepare Pages artifact
        if: github.event_name == 'push'
        uses: actions/upload-pages-artifact@v4.0.0
        with:
          path: website/build

  deploy:
    if: github.event_name == 'push'
    name: GitHub Pages
    concurrency: build-deploy-pages
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: build-artifact
          path: website/build

      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5

  publish:
    if: ${{ github.event_name != 'pull_request' || github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    name: Cloudflare Pages
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: build-artifact
          path: website/build

      - name: Deploy to Cloudflare
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: |
            pages deploy website/build --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME }}

# https://github.com/marketplace/actions/deploy-to-cloudflare-workers-with-wrangler
